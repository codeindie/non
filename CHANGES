[3.9.0]
- created GUI sample (usage java -jar non.jar gen:gui)
- added setVisible(boolean) method to keyboard and mouse modules
- added measureText(text) and measureText(text, width) methods to graphics module
- started working on GUI system (for now only button, label and text box)
- overhauled physics and graphics module (read wiki again please)
- fixed Pong example
- speeded up engine (at start it is slower than before, but after "warming up" it is a bit faster)
- changed non.touchdown(position, pointer, button) to non.touchdown(x, y, pointer, button)
- changed non.touchup(position, pointer, button) to non.touchup(x, y, pointer, button)
- changed non.touchdragged(position, pointer) to non.touchdragged(x, y, pointer)
- changed non.mousemoved(position) to non.mousemoved(x, y)
- fixed non.keytyped(character) event
- added support for setBlending from strings (additive, alpha, subtractive, multiplicative, premultiplied, replace, screen)
- added uniqueNumber and uniqueString methods to math module
- added getTint() method to graphics module

[3.6.0]
- added destroy(..) method for destroying bodies and joints to physics (usage physics.destroy(joint) or physics.destroy(body))
- added many new methods to physics module for different types of joints and joint definitions
- added physics example (usage java -jar non.jar gen:physics)
- added example of require function (usage java -jar non.jar gen:require)
- added support for classes to JavaScript engine (read Wiki for example usage)
- removed CoffeeScript support, now engine only supports JavaScript
- renamed non.cfg to config.json to actually show in what language is it and to support external editors
- removed plugin system, replaced it with module system introduced in last patch (prefix "non" is used for determining non modules)
- moved non.buffer to network.buffer
- split input module to parts, so now f.e input.keyboard is keyboard, input.mouse is mouse etc
- fixed bug when clearing screen via graphics.clear method caused to erase all text from screen permanently (now calling clear method is required before drawing anything on screen and not optional as before)
- added queryAABB method to physics
- optimized calling of functions from scripts by storing them properly in variables
- fixed unproject method from graphics module

[3.5.0]
- added awesome method of handling multiple script files similar to node.js
- removed non.require as it was never working
- moved launcher source code to separate repository to decrease amount of downloaded data for each update and to split versioning of launcher and Non
- added checks for outdated non.jar version
- replaced Lua support with CoffeeScript and optional JavaScript
- removed support for custom scripting languages (sorry folks :/)
- removed need of adding "language" to non.cfg

[3.4.3]
- fixed major dependency resolving bug (thanks to Murii for finding it)

[3.4.2]
- more output logs from gradle
- changed some previous output logs to be more clear
- fixed weird whitespace with warnings
- removed logging of dexing warnings

[3.4.1]
- fixed desktop:run task finally
- fixed few visual bugs in console

[3.4.0]
- revamped Non launcher, now it automatically updates your Non version
- renamed hello task from gen:hello to hello

[3.3.0]
- updated Gradle Android to 0.14.4
- updated RoboVM to 1.0.0-beta-03
- updated LibGDX to 1.5.3
- updated Gradle to 2.2
- revamped physics plugin again (read Physics and Box2D section on Wiki)
- added support for fixtures to physics plugin
- renamed non.getWidth to non.width
- renamed non.getHeight to non.height
- renamed non.getConfig to non.config
- renamed non.getDelta to non.delta
- renamed non.getFPS to non.fps
- renamed non.checkPlatform to non.platform
- removed non.getPlatform
- fixed android:run task (read Running and packaging a project section on Wiki)
- fixed loading of physics plugin
- fixed bug where gradlew was not recognized as executable on Unix systems
- fixed major bug with handling mouse and touch input
- optimized console launcher a bit
- fixed bug when task fails, it was not recognizing it until all tasks ended
- console now properly ignores fake errors from LuaJ and Rhino libraries (Lua and JavaScript)

[3.2.2]
- added proper loading animation for Non command line
- added getPosition method to input.touch
- added option for hiding mouse (desktop only) with show() and hide() methods
- added automatic dependency loading to plugins

[3.2.1]
- simplified logging of non.jar CLI
- added support for multi-threading for JavaScript, not yet working on Lua
- fixed translate method in graphics plugin
- added project and unproject method to graphics plugin
- now logging functions do not return values (was returning always NULL)
- removed warning logging level
- error logging level do not force quit application
- tweaked default log messages a bit
- added setting for log level to non.cfg
- fixed networking
- semi-fixed desktop:run task from CLI (still failing to load resources)
- now update task from CLI properly clears unused plugins and languages
- plugin loader now uses reflection and not initializer class what was generated by gradle
- because of above update, moved all internal plugins from "non.plugins.internal" to "non.plugins" package
- added checks for missing configurations from non.cfg
- added checks for missing resources
- added checks for missing plugins

[3.2.0]
- revamped Non launcher, now only non.jar is required (this also changed some commands, so please read again the Wiki)
- fixed bug what caused that mobile devices thought that all apps made by non are same (so when you tried to install 2 different Non projects on your device, second one simply replaced first one)
- added "package" property to non.cfg
- added sqrt() to math plugin
- added pow() to math plugin

[3.1.0]
- added non.buffer what can be used for reading and writing data to and from byte array
- added checks for not existing functions to scripting
- added more features to math plugin
- added get() method to scripting
- revamped physics plugin
- removed "raw" argument for loading assets, now it is automatically determined if file should be loaded directly or via asset loader
- removed init() method from scripting
- replaced hacky networking with KryoNet (still WIP, some threading issues with scripting)

[3.0.0]
- added drawing of various shapes to graphics plugin
- added new method to graphics plugin for drawing formatted text (printf)
- added new method to graphics plugin for drawing texture quad (drawq)
- added 2 new examples to gen task: Hello World and Pong
- added line and quad to math plugin
- added support for custom scripting languages
- changed non.cfg "main" to "language" and changed its functionality
- removed input.keyboard.isKeyJustPressed
- removed input.touch.isJustTouched
- removed input.mouse.isJustClicked
- renamed graphics.texture to graphics.imageLoader
- renamed graphics.font to graphics.fontLoader
- renamed audio.sound to audio.soundLoader
- renamed audio.music to audio.musicLoader
- renamed graphics.newTexture to graphics.image
- renamed graphics.newFont to graphics.color
- renamed graphics.newShader to graphics.shader
- renamed graphics.newColor to graphics.color
- renamed graphics.setBackground to graphics.clear
- renamed graphics.setColor to graphics.tint
- renamed input.keyboard.isKeyPressed to input.keyboard.isDown
- renamed input.touch.isTouched to input.touch.isDown
- renamed input.mouse.isClicked to input.mouse.isDown
- renamed math.newVector to math.vector
- renamed math.newRectangle to math.rectangle
- renamed math.newCircle to math.circle
- renamed math.newPolygon to math.polygon
- renamed math.newPolyline to math.polyline
- renamed network.newServer and network.newClient to network.server and network.client
- renamed physics.newShape to physics.shape
- removed need for using graphics.begin and graphics.display when drawing anything
- fixed graphics.translate and graphics.rotate
- fixed calling of resize event

[2.0.0]
- added asynchromous resource loading (use non.load(assets) event) along with super sexy loading screen what is displayed during loading 
- removed TILED support (sorry, I wasn´t able to make it work with normal coordinate system)
- totally revamped graphics, audio and input plugin
- added some new events for handling input
- removed need of entire res/ folder for new projects
- fixed major bug with Lua integration what I do not noticed before
- added non.exit method what will quit current game
- added option for changing display mode for desktop from non.cfg