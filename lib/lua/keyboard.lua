--[[--------
User input from keyboard.

Keyboards signal user input by generating events for pressing and releasing a key. Each event carries with it a key-code that identifies the key that was pressed/released. These key-codes differ from platform to platform. NÃ–N tries to hide this fact by providing its own key-code table. You can query which keys are currently being pressed via polling.

Key-codes alone do not give us information about which character the user actually entered. This information is often derived from the state of multiple keys, e.g. the character 'A' is generated by the keys 'a' and 'shift' being pressed simultaneously. In general, deriving characters from the keyboard's state (which keys are down) is non-trivial. Thankfully, the operating system usually has a means to hook up an event listener that not only reports key-code events (key pressed/key released), but also characters.

@module non.keyboard
]]

non.keyboard = {}

--[[----------
Show on-screen keyboard (mobile devices only)
@usage
-- lua -------------------------------------------------------------------------------------
non.keyboard.show()
-- moonscript ------------------------------------------------------------------------------
non.keyboard.show!
]]
function non.keyboard.show()
  NON.gdx.input:setOnscreenKeyboardVisible(true)
end

--[[----------
Hide on-screen keyboard (mobile devices only)
@usage
-- lua -------------------------------------------------------------------------------------
non.keyboard.hide()
-- moonscript ------------------------------------------------------------------------------
non.keyboard.hide!
]]
function non.keyboard.hide()
  NON.gdx.input:setOnscreenKeyboardVisible(false)
end

--[[----------
Change on-screen keyboard visibility (mobile devices only)
@tparam boolean visible set if keyboard will be visible or not
@usage
-- lua -------------------------------------------------------------------------------------
non.keyboard.setVisible(true)
-- moonscript ------------------------------------------------------------------------------
non.keyboard.setVisible true
]]
function non.keyboard.setVisible(visible)
  NON.gdx.input:setOnscreenKeyboardVisible(visible)
end

--[[----------
Check if specified key is down
@tparam string key key to check for
@treturn boolean true if specified key is pressed
@usage
-- lua -------------------------------------------------------------------------------------
isADown = non.keyboard.isDown("A")
-- moonscript ------------------------------------------------------------------------------
isADown = non.keyboard.isDown "A"
]]
function non.keyboard.isDown(key)
  local keycode = NON:getKey(name)
  if NON.gdx.input:isKeyPressed(keycode) and keycode ~= 0 then return true end
  return false
end